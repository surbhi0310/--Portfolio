{"version":3,"file":"static/js/886.6758d07c.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","import type { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === 'root'\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport type { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === 'function') {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport type { InViewHookResponse, IntersectionOptions } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions['onChange']>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.16\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.16\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.16 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_objectWithoutProperties","e","t","o","r","i","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","_typeof","Symbol","iterator","constructor","prototype","toPropertyKey","toPrimitive","TypeError","String","Number","_defineProperty","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","sort","key","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","entry","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","delete","unobserve","size","disconnect","React","useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","ref","setRef","React2","state","setState","current","entryTarget","_a","previousEntryTarget","result","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","this","order","scheduled","add","process","remove","index","clear","stepsOrder","schedule","frame","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","amount","once","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","_visualElement$makeTa","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","resolveCSSVariables","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}